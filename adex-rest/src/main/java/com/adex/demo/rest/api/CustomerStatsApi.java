/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.5.0).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.adex.demo.rest.api;

import com.adex.demo.rest.models.CustomersStatsResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import java.time.LocalDate;
import javax.annotation.processing.Generated;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    comments =
        "Generator version: 7.5.0, using custom templates: /src/main/resources/openapitemplates")
@Tag(name = "CustomerStats", description = "Customer's stats.")
public interface CustomerStatsApi {

  /**
   * GET /api/v1/stats/{customerId}
   *
   * @param customerId The Customer ID (required)
   * @param date The date of the stats. (required)
   * @return Customer&#39;s stats for the specific date. (status code 200)
   */
  @Operation(
      operationId = "getCustomersStats",
      tags = {"CustomerStats"},
      responses = {
        @ApiResponse(
            responseCode = "200",
            description = "Customer's stats for the specific date. ",
            content = {
              @Content(
                  mediaType = "application/json",
                  schema = @Schema(implementation = CustomersStatsResponse.class))
            })
      })
  @RequestMapping(
      method = RequestMethod.GET,
      value = "/api/v1/stats/{customerId}",
      produces = {"application/json"})
  ResponseEntity<CustomersStatsResponse> getCustomersStats(
      @Parameter(
              name = "customerId",
              description = "The Customer ID",
              required = true,
              in = ParameterIn.PATH)
          @PathVariable("customerId")
          String customerId,
      @Parameter(
              name = "date",
              description = "The date of the stats. ",
              required = true,
              in = ParameterIn.QUERY)
          @RequestParam(value = "date", required = true)
          @DateTimeFormat(iso = DateTimeFormat.ISO.DATE)
          LocalDate date);
}
