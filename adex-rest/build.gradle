import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'org.openapi.generator' version "${openApiCodegenVersion}"
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

compileJava {
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    options.warnings = true
    options.deprecation = true
    options.release = 21
}

javadoc {
    options.encoding = 'UTF-8'
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

group = 'com.adex'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"
    implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApiVersion}"
    implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

openApiValidate {
    inputSpec.set("${rootDir}/openapi-spec/openapi_spec.yml")
}

openApiGenerate {
    generatorName.set("spring")
    library.set("spring-boot")
    validateSpec.set(true)
    inputSpec.set("${rootDir}/openapi-spec/openapi_spec.yml")
    outputDir.set("${projectDir}")
    apiPackage.set("com.adex.demo.rest.api")
    modelPackage.set("com.adex.demo.rest.models")
    //original templates are here -
    //https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/JavaSpring
    templateDir.set("${projectDir}/src/main/resources/openapitemplates")

    typeMappings = [
            Double: "BigDecimals"
    ]

    globalProperties = [
            apis: "",
            models: ""
    ]

    configOptions.set([
            dateLibrary: "java8",
            useBeanValidation: "false",
            performBeanValidation: "false",
            hideGenerationTimestamp: "true",
            singleContentTypes: "true",
            skipDefaultInterface: "true",
            interfaceOnly: "true",
            useTags: "true",
            additionalModelTypeAnnotations:
                    "@lombok.Data;" +
                    "@lombok.NoArgsConstructor;" +
                    "@lombok.AllArgsConstructor"
    ])
}

tasks.withType(GenerateTask).configureEach {
    outputs.upToDateWhen { false }
    outputs.cacheIf { false }
}

jar {
    enabled = true
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}